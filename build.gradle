plugins {
    id 'java-gradle-plugin'
    id 'com.gradle.plugin-publish' version '0.10.0'
    id 'org.jetbrains.kotlin.jvm' version '1.3.11'
}

repositories {
    mavenCentral()
}

def descriptionText = 'Tool for finding jars in a given configuration.'
description descriptionText

dependencies {
    compileOnly gradleApi()
    compileOnly localGroovy()
    implementation 'org.jetbrains.kotlin:kotlin-stdlib:1.3.11'
    compile 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    compile group: 'commons-codec', name: 'commons-codec', version: '1.9'
    testCompile 'junit:junit:4.12'
    testCompile gradleTestKit()
    testCompile group: 'org.assertj', name: 'assertj-core', version: '3.11.1'
}

sourceSets {
    functionalTest {
        kotlin.srcDir file('src/functTest/kotlin')
        compileClasspath += sourceSets.main.output + configurations.testCompile
        runtimeClasspath += output + compileClasspath
    }
}

task functionalTest(type: Test) {
    description = 'Runs the functional tests.'
    group = 'verification'
    testClassesDirs = sourceSets.functionalTest.output.classesDirs
    classpath = sourceSets.functionalTest.runtimeClasspath
}

gradlePlugin {
    plugins {
        findJars {
            id = 'com.criteo.gradle.findjars'
            displayName = 'FindJars plugin'
            description = descriptionText
            implementationClass = 'com.criteo.gradle.findjars.FindJarsPlugin'
        }
    }
    testSourceSets sourceSets.functionalTest
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

pluginBundle {
    website = 'https://github.com/criteo/findjars'
    vcsUrl = 'https://github.com/criteo/findjars.git'
    description = descriptionText
    tags = ['find', 'jar', 'debug', 'classpath', 'conflicts']
}
