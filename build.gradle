/*
 * TODO
 * ex: the one used at https://github.com/nebula-plugins/gradle-lint-plugin/blob/master/build.gradle
 *
 * Copyright 2014-2017 Netflix, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
plugins {
    id 'java-gradle-plugin'
    id "org.jetbrains.kotlin.jvm" version "1.3.11"
}

repositories {
    mavenCentral()
}

apply plugin:'groovy'

def descriptionText = 'Tool for finding jars in a given configuration.'
description descriptionText

dependencies {
    compileOnly gradleApi()
    compileOnly localGroovy()
    implementation 'org.jetbrains.kotlin:kotlin-stdlib:1.3.11'
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    compile group: 'commons-codec', name: 'commons-codec', version: '1.9'
    testCompile 'junit:junit:4.12'
    testCompile gradleTestKit()
    testCompile group: 'org.assertj', name: 'assertj-core', version: '3.11.1'
}

sourceSets {
    functionalTest {
        kotlin.srcDir file('src/functTest/kotlin')
        compileClasspath += sourceSets.main.output + configurations.testCompile
        runtimeClasspath += output + compileClasspath
    }
}

task functionalTest(type: Test) {
    description = 'Runs the functional tests.'
    group = 'verification'
    testClassesDirs = sourceSets.functionalTest.output.classesDirs
    classpath = sourceSets.functionalTest.runtimeClasspath
}

gradlePlugin {
    plugins {
        workspace {
            id = 'com.criteo.gradle.findjars'
            implementationClass = 'com.criteo.gradle.findjars.FindJarsPlugin'
        }
    }
    testSourceSets sourceSets.functionalTest
}


/*pluginBundle {
    website = 'TODO'
    vcsUrl = 'TODO'
    description = descriptionText

    mavenCoordinates {
        groupId = 'com.criteo.gradle'
        artifactId = 'findjars'
    }
 }*/
